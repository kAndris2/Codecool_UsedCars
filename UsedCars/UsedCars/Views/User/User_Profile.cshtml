@model UserModel
@{
    ViewData["Title"] = Model.Name + "'s profile";
    IDAO Singleton = IDAO.Singleton;
    Singleton.UpdateViews("users", Model.ID);
    string currentTable = "user";
    UserModel user = null;

    if (User.Identity.IsAuthenticated)
        user = Singleton.GetUserByEmail(User.Claims.First().Value);
}

<link rel="stylesheet" href="~/css/slideshow.css" />

<div class="slideshow-container">
    @if (Model.Pictures.Count >= 1)
    {
        @for (int i = 0; i < Model.Pictures.Count; i++)
        {
            <div class="mySlides">
                <div class="numbertext">@(i + 1) / @Model.Pictures.Count</div>
                <img class="card-img-top" src="@Model.Pictures[i].Route" width="300" height="550">
                <!--<div class="text">Caption Text</div>-->
            </div>
        }
        <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
        <a class="next" onclick="plusSlides(1)">&#10095;</a>
    }
    else
    {
        <img class="card-img-top" src="~/pics/no_img.png" alt="Card image cap">
    }

    <br>
    <div style="text-align:center">
        @for (int i = 0; i < Model.Pictures.Count; i++)
        {
            <span class="dot" onclick="currentSlide(@i+1)"></span>
        }
    </div>
</div>

<div class="card mb-3">
    <div class="card-body">

        <div class="float-left">
            <img src="~/pics/views.png" width="30" height="30">
            <span class="badge badge-light">@Model.Views</span>
        </div>

        @if (User.Identity.IsAuthenticated)
        {
            @if (Model.ID == user.ID)
            {
                <div class="float-right">
                    <a href="@Url.Action("User_Edit", "User", new { id = Model.ID })">
                        <img src="~/pics/settings.jpg" width="80" height="80" />
                    </a>
                </div>
            }
        }

        <br><br><h5 class="card-title">#@Model.ID - @Model.Name</h5>

        <p class="card-text">
            <b>General informations:</b>
            <ul>
                <li>@Model.Email</li>
                <li>@Model.Rank</li>

                @if (Model.Gender != null)
                {
                    <li>@Singleton.GetFormattedGender(Model.Gender)</li>
                }
            </ul>
        </p>

        @if (Model.GetDate(Model.Birth_Date) != null)
        {
            <p class="card-text">Date of birth: @Model.GetDate(Model.Birth_Date)</p>
        }

        <p class="card-text">
            <b>Introduction:</b>
            @if (Model.Introduction == "")
            {
                <a>N/A</a>
            }
            else
            {
                <br>
                @Model.Introduction
            }
        </p>

        <button onclick="fakeButton()" class="btn btn-secondary">Get user password</button>

        <div id="fake" style="display:none">
            <img src="~/pics/pointing.gif" width="120" height="120">
        </div>

        <p class="card-text"><small class="text-muted">Registered at: @Model.GetDate(Model.Registration_Date)</small></p>
        <p>
            <small>
                <b id="siteLikeCount">@Model.Likes.Count</b>
                <b>likes</b>
            </small>
        </p>

        @if (User.Identity.IsAuthenticated)
        {
            <div class="container row">
                <div class="col-auto">
                    <a href="#">
                        <img style="display:block" id="dislike" onclick="dislikeSite()" src="~/pics/liked.jpg" width="30" height="30" />
                    </a>
                    <a href="#">
                        <img style="display:block" id="like" onclick="likeSite()" src="~/pics/like.jpg" width="30" height="30" />
                    </a>
                </div>

                <div class="col-auto">
                    <form method="post" asp-action="User_Garage" asp-controller="User">
                        <input type="hidden" name="userid" value="@Model.ID" />
                        <input type="image" src="~/pics/garage.jpg" width="30" height="30" alt="Submit Form" />
                    </form>
                </div>

                <div class="col-auto">
                    <a href="#" data-toggle="modal" data-target="#exampleModal">
                        <img src="~/pics/comment.png" width="30" height="30" />
                    </a>
                </div>
            </div>
        }

    </div>
</div>

@foreach (CommentModel comment in Model.Comments)
{
    <div class="media" style="background-color:white;">

        <a href="@Url.Action("User_Profile", "User", new { id = comment.Owner_ID})">
            @if (Singleton.GetUserByID(comment.Owner_ID).Pictures.Count >= 1)
            {
                <img class="mr-3" src="@Singleton.GetUserByID(comment.Owner_ID).Pictures[0].Route" width="70" height="64" />
            }
            else
            {
                <img class="mr-3" src="~/pics/no_img.png" width="70" height="64" />
            }
        </a>

        <div class="media-body">
            <h5 class="mt-0">#@comment.ID - @comment.Title</h5>
            @Singleton.LineBreak(comment.Message)

            <p>
                <small>
                    <b id="likecount_@comment.ID">@comment.Likes.Count</b>
                    <b>likes</b>
                </small>
            </p>
        </div>

        <p class="card-text"><small class="text-muted">@comment.GetDate()</small></p>

    </div>

    @if (User.Identity.IsAuthenticated)
    {
        <div class="container row">
            @if (user.ID == comment.Owner_ID)
            {
                <div class="col-auto">
                    <a href="@Url.Action("Edit_Comment", "Comment", new { id = comment.ID})">
                        <img src="~/pics/settings.jpg" width="30" height="30" />
                    </a>
                </div>
            }

            <div class="col-auto">
                <a href="#">
                    <img style="display:block" id="dislike_@comment.ID" onclick="dislikeComment(@comment.ID)" src="~/pics/liked.jpg" width="30" height="30" />
                </a>
                <a href="#">
                    <img style="display:block" id="like_@comment.ID" onclick="likeComment(@comment.ID)" src="~/pics/like.jpg" width="30" height="30" />
                </a>
            </div>

            <div class="col-auto">
                <form method="post" asp-action="Delete_Comment" asp-controller="Comment">
                    <input type="hidden" name="commentid" value="@comment.ID" />
                    <input type="image" src="~/pics/delete.jpg" alt="Submit" width="30" height="30" />
                </form>
            </div>
        </div>
    }

    <br>
}

@if (User.Identity.IsAuthenticated)
{
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Add a comment!</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form method="post" asp-action="User_Comment" asp-controller="User">
                        <div class="form-group">
                            <label for="recipient-name" class="col-form-label">Title:</label>
                            <input type="text" class="form-control" name="title">
                        </div>
                        <div class="form-group">
                            <label for="message-text" class="col-form-label">Message:</label>
                            <textarea class="form-control" name="message"></textarea>
                        </div>
                        <input type="hidden" name="ownerid" value="@user.ID" />
                        <input type="hidden" name="userid" value="@Model.ID" />

                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-warning">Add</button>

                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>

        function dislikeSite() {
            document.getElementById("dislike").style.display = "none";
            document.getElementById("like").style.display = "block";
            $.post("/Like/Delete", { 'likedata': [@user.ID.ToString(), @Model.ID.ToString(), '@(currentTable)'] });
            document.getElementById("siteLikeCount").innerHTML = @Model.Likes.Count;
            console.log(@Model.Likes.Count);
        }

        function likeSite() {
            document.getElementById("like").style.display = "none";
            document.getElementById("dislike").style.display = "block";
            $.post("/Like/Create", { 'likedata': [@user.ID.ToString(), @Model.ID.ToString(), '@(currentTable)'] });
            document.getElementById("siteLikeCount").innerHTML = @Model.Likes.Count;
            console.log(@Model.Likes.Count);
        }

        function dislikeComment(id) {
            document.getElementById("dislike_" + id).style.display = "none";
            document.getElementById("like_" + id).style.display = "block";
            $.post("/Like/Delete", { 'likedata': [@user.ID.ToString(), id, 'comment'] });
            document.getElementById("likecount_" + id).innerHTML = CountCommentLikes(id);
        }

        function likeComment(id) {
            document.getElementById("dislike_" + id).style.display = "block";
            document.getElementById("like_" + id).style.display = "none";
            $.post("/Like/Create", { 'likedata': [@user.ID.ToString(), id, 'comment'] });
            document.getElementById("likecount_" + id).innerHTML = CountCommentLikes(id) + 1;
        }

        function CountCommentLikes(id) {
            let count = 0;
            likeList.forEach((like) => {
                if (like.comment_ID == id) {
                    count++;
                }
            });
            return count;
        }

        function getComments() {
            commentList = JSON.parse(this.responseText);

            const xhr = new XMLHttpRequest();
            xhr.addEventListener('load', getLikes);
            xhr.open('POST', '/Like/GetLikes');
            xhr.send();
        }

        function getLikes() {
            likeList = JSON.parse(this.responseText);
            commentList.forEach((comment) => {
                if (likeList.length >= 1) {
                    likeList.forEach((like) => {
                        if (like.comment_ID == comment.id && like.owner_ID == @user.ID) {
                            document.getElementById("dislike_" + comment.id).style.display = "block";
                            document.getElementById("like_"  + comment.id).style.display = "none";
                        }
                        else {
                            document.getElementById("dislike_" + comment.id).style.display = "none";
                            document.getElementById("like_"  + comment.id).style.display = "block";
                        }
                    });
                }
                else {
                    document.getElementById("dislike_" + comment.id).style.display = "none";
                    document.getElementById("like_"  + comment.id).style.display = "block";
                }
            });
        }

        let check = '@(Singleton.UserIsLikedThis(user.ID, Model.ID, currentTable))'

        if (check === 'False') {
            document.getElementById("dislike").style.display = "none";
            document.getElementById("like").style.display = "block";
        }
        else {
            document.getElementById("dislike").style.display = "block";
            document.getElementById("like").style.display = "none";
        }

        var commentList;
        var likeList;
        const xhr = new XMLHttpRequest();
        xhr.addEventListener('load', getComments);
        xhr.open('POST', '/Like/GetComments');
        xhr.send();

    </script>
}

<script>
    function fakeButton() {
        document.getElementById("fake").style.display = "inherit";
    }
</script>

<script src="~/js/slideshow.js"></script>
<script src="~/js/modals.js"></script>


